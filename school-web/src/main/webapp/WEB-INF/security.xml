<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Enable the @Secured annotation to secure service layer methods -->
	<global-method-security secured-annotations="enabled">
		<expression-handler ref="defaultMethodSecurityExpressionHandler" />
	</global-method-security>


	<beans:bean
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler" />
	<http security="none" pattern="/favicon.ico" />

	<http auto-config='true'>
		<intercept-url pattern="/login/" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/**"
			access="ROLE_ADMIN, ROLE_STUDENT, ROLE_PROF, ROLE_SECRETAIRE, ROLE_DIRECTOR, ROLE_PARENT" />
		<form-login login-page="/login/"
			authentication-failure-url="/login/?error=true" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"

				users-by-username-query="
         SELECT USERNAME, PASSWORD, ENABLED 
         FROM USERS 
         WHERE USERNAME=?;"

				authorities-by-username-query="
        SELECT u.USERNAME, r.ROLE FROM USERS u, USERs_ROLE ur,ROLE r
        WHERE u.ID = ur.USERs_ID and r.id=ur.roles_id
        AND u.USERNAME=?;" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>